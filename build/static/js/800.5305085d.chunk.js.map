{"version":3,"file":"static/js/800.5305085d.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,SAAEJ,EAAMI,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BC4DnI,EAvDkB,SAACJ,GACjB,IAAMK,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UACrBE,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAe1B,OACEI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAX,SAAA,EACEH,EAAAA,EAAAA,KAACe,EAAAA,GAAM,CACLC,KAAML,EACNM,QAAS,SAACC,GAAQ,MAChB,sEAAsE,KAG1ElB,EAAAA,EAAAA,KAACmB,EAAI,CAAAhB,UACHU,EAAAA,EAAAA,MAAA,QACEZ,UAAWC,EACXkB,QAdiB,WACvBR,GAAW,EACb,EAaQS,SAzBR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBpB,EAAeqB,QAAQC,MACvCC,EAAcrB,EAAamB,QAAQC,MAIzC3B,EAAM6B,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAgBoCxB,SAAA,CAE3BJ,EAAMgC,YACL/B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BH,EAAAA,EAAAA,KAACgC,EAAAA,EAAc,OAInBnB,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,SAAQ9B,SAAC,YACxBH,EAAAA,EAAAA,KAAA,SAAOkC,KAAK,OAAOC,GAAG,SAASC,IAAKhC,QAEtCS,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,OAAM9B,SAAC,UACtBH,EAAAA,EAAAA,KAAA,YAAUmC,GAAG,OAAOE,KAAK,IAAID,IAAK9B,QAEpCN,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BH,EAAAA,EAAAA,KAAA,UAAQsC,QAAS,WAAK1B,GAAW,EAAM,EAAEX,UAAU,MAAKE,SAAC,uBAMrE,E,kBCtCA,EAfkB,WACd,IAAAoC,GAA8BC,EAAAA,EAAAA,GAAQC,EAAAA,IAA/BC,EAAWH,EAAXG,YAAaC,EAAMJ,EAANI,OACdC,GAAUC,EAAAA,EAAAA,OACpBC,EAAAA,EAAAA,YAAU,WACQ,cAAXH,GACCC,EAAQG,KAAK,UAErB,GAAE,CAACJ,EAAOC,IAMR,OAAO5C,EAAAA,EAAAA,KAACgD,EAAS,CAACjB,UAAsB,YAAXY,EAAsBf,WAJ9B,SAACqB,GAChBC,QAAQC,IAAIF,GACZP,EAAYO,EAChB,GAEJ,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuotes.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__m-+xb\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__07fPl\",\"loading\":\"QuoteForm_loading__uETUS\",\"control\":\"QuoteForm_control__GR-n0\",\"actions\":\"QuoteForm_actions__pRujc\"};","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEnter, setIsEnter] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const formFocusHandler = () => {\n    setIsEnter(true);\n  };\n  return (\n    <>\n      <Prompt\n        when={isEnter}\n        message={(location) =>\n          \"Are you sure you want to leave this page? all your data will be lost\"\n        }\n      />\n      <Card>\n        <form\n          className={classes.form}\n          onFocus={formFocusHandler}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={()=>{setIsEnter(false)}}className=\"btn\">Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React , {useEffect}from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport {addQuote} from '../lib/api';\r\nimport useHttp from \"../hooks/use-http\";\r\n\r\nconst NewQuotes = () => {\r\n    const {sendRequest, status} = useHttp(addQuote)\r\n    const history = useHistory()\r\nuseEffect(()=>{\r\n    if(status === 'completed'){\r\n        history.push('/quotes')\r\n    }\r\n},[status,history])\r\n\r\n    const onAddQuote = (data)=>{\r\n        console.log(data)\r\n        sendRequest(data)\r\n    }\r\n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={onAddQuote}/>;\r\n};\r\nexport default NewQuotes;\r\n"],"names":["props","_jsx","className","classes","children","authorInputRef","useRef","textInputRef","_useState","useState","_useState2","_slicedToArray","isEnter","setIsEnter","_jsxs","_Fragment","Prompt","when","message","location","Card","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","_useHttp","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","QuoteForm","data","console","log"],"sourceRoot":""}