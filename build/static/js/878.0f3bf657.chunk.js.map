{"version":3,"file":"static/js/878.0f3bf657.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","components/comments/Comments.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetails.jsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__Xu-6v\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__XbhPV\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__sFU-7\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__8L1Zf\",\"loading\":\"NewCommentForm_loading__uKH4Z\",\"control\":\"NewCommentForm_control__71vVE\",\"actions\":\"NewCommentForm_actions__XGX5N\"};","import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport classes from './NewCommentForm.module.css';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = ({onAddComment,quoteId}) => {\n  const commentTextRef = useRef();\n  const {sendRequest, status, error} = useHttp(addComment)\n  useEffect(()=>{\n    if(status === 'completed' && !error){\n      onAddComment()\n    }\n  },[status, error,onAddComment])\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value\n    // optional: Could validate here\n    sendRequest({commentData:{text:enteredText}, quoteId: quoteId,})\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {\n        status === 'completed' && (\n          <div className='centered'>\n            <LoadingSpinner/>\n          </div>\n        )\n      }\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams()\n  const quoteID = uuidv4()\n  const {quoteId} = params\n  const {sendRequest, status, data:loadedComments} = useHttp(getAllComments)\n  console.log(params.quoteId)\n  useEffect(()=>{\n    sendRequest(quoteId)\n  },[sendRequest,quoteId])\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = useCallback(()=>{\n    sendRequest(quoteId)\n  },[sendRequest,quoteId])\n  let comments;\n  if(status=== 'pending'){\n    comments = <div className='centered'>\n      <LoadingSpinner/>\n    </div>\n  }\n  if(status==='completed'&& (loadedComments || loadedComments.length > 0) ){\n    comments = <CommentsList comments={loadedComments}/>\n  }\n  if(status === 'completed' && (!loadedComments || loadedComments.length === 0)){\n    comments = <p className='centered'>No comments is added yet</p>\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteID} onAddComment={addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__ikxZg\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React from \"react\";\r\nimport { useParams, Route, Link,useRouteMatch } from \"react-router-dom\";\r\nimport Container from \"../components/UI/Container\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport styled from \"styled-components\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nfunction QuoteDetails({ quotes }) {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n  const quoteDetail = quotes.find((qte) => qte.id === params.quotesId);\r\n  if (!quoteDetail) {\r\n    return <Paragraph>No Qoute Found!</Paragraph>;\r\n  }\r\n  return (\r\n    <>\r\n      <Container>\r\n        <HighlightedQuote text={quoteDetail.text} author={quoteDetail.author} />\r\n        <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link\r\n            className=\"btn--flat\"\r\n            to={`${match.url}/comments`}\r\n          >\r\n            {\" \"}\r\n            View comments\r\n          </Link>\r\n        </div>\r\n        </Route>\r\n        <Route path={`${match.path}/comments`}>\r\n          <Comments />\r\n        </Route>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuoteDetails;\r\n\r\nconst Paragraph = styled.p.attrs((className, size) => ({\r\n  className,\r\n}))`\r\n  margin: 2rem 0;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`;\r\n"],"names":["getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","arguments","length","undefined","toLowerCase","options","buf","native","rnds","random","props","_jsx","className","classes","children","text","comments","map","comment","CommentItem","id","_ref","onAddComment","quoteId","commentTextRef","useRef","_useHttp","useHttp","addComment","sendRequest","status","error","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","_jsxs","onSubmit","LoadingSpinner","htmlFor","rows","ref","_useState","useState","_useState2","_slicedToArray","isAddingComment","setIsAddingComment","params","useParams","quoteID","uuidv4","getAllComments","loadedComments","data","console","log","addedCommentHandler","useCallback","CommentsList","onClick","NewCommentForm","author","quotes","match","useRouteMatch","quoteDetail","find","qte","quotesId","_Fragment","Container","HighlightedQuote","Route","path","exact","Link","to","concat","url","Comments","Paragraph","styled","size","_templateObject","_taggedTemplateLiteral"],"sourceRoot":""}